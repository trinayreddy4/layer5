{"version":3,"file":"component---src-pages-blog-index-js-ba7771dfa5cf0e6864b8.js","mappings":"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","sources":["webpack://Layer5/./src/sections/Blog/Blog-grid/blogGrid.style.js","webpack://Layer5/./src/sections/Blog/Blog-grid/index.js","webpack://Layer5/./src/pages/blog/index.js"],"sourcesContent":["import styled from \"styled-components\";\nexport const BlogPageWrapper = styled.div`\n  .blog-grid-wrapper {\n    margin: 5rem auto;\n  }\n  .tooltip-search {\n    margin-bottom: 0.8rem;\n  }\n  .post-thumb-block {\n    img {\n      padding: 0px;\n      margin-top: 0.5rem;\n      width: 100%;\n      height: 100%;\n    }\n  }\n  @media only screen and (max-width: 576px) {\n    .blog-grid-wrapper {\n      margin: 0 auto 1rem;\n    }\n    .tooltip-search {\n\t\t\tdisplay: block;\n\t\t}\n  }\n\n  @media only screen and (max-width: 992px) {\n    .blog-page-wrapper {\n      margin-bottom: 5rem;\n    }\n\n    .post-meta-block {\n      height: 3.5rem;\n    }\n  }\n\n  @media only screen and (min-width: 577px) {\n    .tooltip-search {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 0;\n    }\n  }\n  /* @media only screen and (min-width: 990px) {\n    .tooltip-search {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n  } */\n`;\n","import React from \"react\";\nimport { Container, Row, Col } from \"../../../reusecore/Layout\";\nimport PageHeader from \"../../../reusecore/PageHeader\";\nimport Sidebar from \"../Blog-sidebar\";\nimport RssFeedIcon from \"../../../assets/images/socialIcons/rss-sign.svg\";\nimport { BlogPageWrapper } from \"./blogGrid.style\";\nimport Card from \"../../../components/Card\";\nimport BlogViewToolTip from \"../../../components/blog-view-tooltip\";\nimport SearchBox from \"../../../reusecore/Search\";\nimport Pagination from \"../../Resources/Resources-grid/paginate\";\n\nconst BlogGrid = ({\n  isListView,\n  setListView,\n  setGridView,\n  pageContext,\n  searchData,\n  searchQuery,\n  setCurrentPage,\n  currentPage,\n  searchedPosts,\n  queryResults,\n  postsPerPage,\n}) => {\n  // Change page\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    window.scrollTo({\n      top: 150,\n      left: 100,\n      behavior: \"smooth\",\n    });\n  };\n  return (\n    <BlogPageWrapper>\n      <PageHeader\n        title=\"Blog\"\n        path=\"Blog\"\n        img={RssFeedIcon}\n        feedlink=\"/blog/feed.xml\"\n      />\n      <div className=\"blog-page-wrapper\">\n        <Container>\n          <Row>\n            <Col xs={12} lg={8}>\n              <div className=\"tooltip-search\">\n                <BlogViewToolTip\n                  isListView={isListView}\n                  setListView={setListView}\n                  setGridView={setGridView}\n                />\n                <SearchBox searchQuery={searchQuery} searchData={searchData} paginate={paginate} currentPage={currentPage} />\n              </div>\n              <div className=\"blog-grid-wrapper\">\n                <Row>\n                  {queryResults.length < 1 && (\n                    <Col xs={12} sm={6}>\n                      No blog post that matches the title \"{searchQuery}\" found.\n                    </Col>\n                  )}\n\n                  {searchedPosts.length > 0 && searchedPosts.map(({ id, frontmatter, fields }) => (\n                    <Col key={id} xs={12} sm={6}>\n                      <Card frontmatter={frontmatter} fields={fields} />\n                    </Col>\n                  ))}\n                  <Col>\n                    {searchedPosts.length > 0 && (\n                      <Pagination\n                        postsPerPage={postsPerPage}\n                        totalPosts={queryResults.length}\n                        paginate={paginate}\n                        currentPage={currentPage}\n                      />\n                    )}\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n            <Col xs={12} lg={4}>\n              <Sidebar pageContext={pageContext} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </BlogPageWrapper>\n  );\n};\n\nexport default BlogGrid;\n","import React, { useState, useEffect } from \"react\";\nimport useDataList from \"../../utils/usedataList\";\nimport SEO from \"../../components/seo\";\nimport BlogGrid from \"../../sections/Blog/Blog-grid\";\nimport { graphql } from \"gatsby\";\nimport loadable from \"@loadable/component\";\nconst BlogList = loadable(() => import (\"../../sections/Blog/Blog-list\"));\n\nexport const query = graphql`\n  query allBlogs {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fields: { collection: { eq: \"blog\" } }\n        frontmatter: { published: { eq: true } }\n      }\n    ) {\n      nodes {\n        id\n        body\n        frontmatter {\n          title\n          date(formatString: \"MMM Do, YYYY\")\n          author\n          thumbnail {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH)\n            }\n            extension\n            publicURL\n          }\n          darkthumbnail {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH)\n            }\n            extension\n            publicURL\n          }\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n\nconst Blog = (props) => {\n  const [isListView, setIsListView] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const { queryResults, searchData } = useDataList(\n    props.data.allMdx.nodes,\n    setSearchQuery,\n    searchQuery,\n    [\"frontmatter\", \"title\"],\n    \"id\"\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const searchedPosts = queryResults.slice(indexOfFirstPost, indexOfLastPost);\n  const setListView = () => {\n    setIsListView(true);\n  };\n  const setGridView = () => {\n    setIsListView(false);\n  };\n  useEffect(() => {\n    if (props.location.state) {\n      if (props.location.state.isListView) setListView();\n    }\n  }, []);\n  let BlogView = (props) => {\n    if (isListView) return <BlogList {...props} />;\n    return <BlogGrid {...props} />;\n  };\n  return (\n    <>\n      <BlogView\n        isListView={isListView}\n        setListView={setListView}\n        setGridView={setGridView}\n        pageContext={props.pageContext}\n        searchedPosts={searchedPosts}\n        setCurrentPage={setCurrentPage}\n        postsPerPage={postsPerPage}\n        searchData={searchData}\n        searchQuery={searchQuery}\n        setSearchQuery={setSearchQuery}\n        currentPage={currentPage}\n        queryResults={queryResults}\n      />\n\n    </>\n  );\n};\nexport default Blog;\nexport const Head = () => {\n  return <SEO title=\"Blog\" description=\"The latest news and announcements about Layer5, our products, and our ecosystem, as well as voices from across our community.\" />;\n};"],"names":["BlogPageWrapper","styled","div","withConfig","displayName","componentId","_ref","isListView","setListView","setGridView","pageContext","searchData","searchQuery","setCurrentPage","currentPage","searchedPosts","queryResults","postsPerPage","paginate","pageNumber","window","scrollTo","top","left","behavior","React","PageHeader","title","path","img","RssFeedIcon","feedlink","className","Container","Row","Col","xs","lg","BlogViewToolTip","SearchBox","length","sm","map","_ref2","id","frontmatter","fields","key","Card","Pagination","totalPosts","Sidebar","BlogList","loadable","props","setIsListView","useState","setSearchQuery","useDataList","data","allMdx","nodes","indexOfLastPost","indexOfFirstPost","slice","useEffect","location","state","BlogView","BlogGrid","Head","SEO","description"],"sourceRoot":""}